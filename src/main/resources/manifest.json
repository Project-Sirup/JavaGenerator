{
  "sirup_v": 1,
  "acceptedFormats": [
    "json"
  ],
  "templates": [],
  "languages": [
    {
      "language": "Java",
      "description": "Generate a microservice written in Java 17",
      "options": [
        {
          "buildTool": {
            "selection": [
              "Maven",
              "Gradle"
            ]
          }
        },
        {
          "groupId": {
            "value": "string"
          }
        }
      ]
    },
    {
      "language": "Kotlin",
      "description": "Generate a microservice written in Kotlin",
      "options": [
        {
          "buildTool": {
            "selection": [
              "Maven",
              "Gradle"
            ]
          }
        },
        {
          "groupId": {
            "value": "string"
          }
        }
      ]
    }
  ],
  "apiTypes": [
    {
      "apiType": "REST",
      "description": "Generates a microservice with a REST API, using Apache Spark",
      "options": [
        {
          "port": {
            "value": "number"
          }
        },
        {
          "endpoints": {
            "repeated": {
              "object": {
                "name": "endpoint",
                "values": [
                  {
                    "name": "method",
                    "selection": [
                      "GET",
                      "POST",
                      "PUT",
                      "DELETE"
                    ]
                  },
                  {
                    "name": "path",
                    "value": "string"
                  },
                  {
                    "name": "linkedMethod",
                    "value": "string"
                  }
                ]
              }
            }
          }
        },
        {
          "endpointGroups": {
            "repeated": {
              "object": {
                "name": "endpointGroup",
                "values": [
                  {
                    "name": "groupName",
                    "value": "string"
                  },
                  {
                    "name": "endpoints",
                    "repeated": {
                      "object": {
                        "name": "endpoint",
                        "values": [
                          {
                            "name": "method",
                            "selection": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE"
                            ]
                          },
                          {
                            "name": "path",
                            "value": "string"
                          },
                          {
                            "name": "linkedMethod",
                            "value": "string"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "name": "linkedData",
                    "value": "string"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    {
      "apiType": "gRPC",
      "description": "Generates a microservice with a gRPC API",
      "options": [
        {
          "port": {
            "value": "number"
          }
        },
        {
          "procedures": {
            "multi": [
              "dataTypes.complex.procedure"
            ]
          }
        },
        {
          "messages": {
            "multi": [
              "dataTypes.complex.message"
            ]
          }
        }
      ]
    }
  ],
  "databases": [
    {
      "database": "PostgreSQL",
      "description": "Generates the microservice with a PostgreSQL connection and classes for accessing data in the database",
      "supportedTypes": [
        "string",
        "int32",
        "int64",
        "float",
        "boolean"
      ],
      "options": []
    },
    {
      "database": "MongoDB",
      "description": "Generates the microservice with a MongoDB connection and classes for accessing data in the database",
      "supportedTypes": [
        "any"
      ],
      "options": []
    }
  ],
  "dataTypes": {
    "complex": {
      "endpointGroup": {
        "fields": [
          {
            "name": "groupName",
            "type": "string"
          },
          {
            "name": "innerGroups",
            "type": [
              "dataTypes.complex.endpointGroup"
            ]
          },
          {
            "name": "endpoints",
            "type": [
              "dataTypes.complex.endpoint"
            ]
          },
          {
            "name": "linkedData",
            "type": "dataTypes.simple.string"
          }
        ]
      },
      "procedure": {
        "fields": [
          {
            "name": "procedureName",
            "value": "string"
          },
          {
            "name": "requestMessage",
            "value": "string"
          },
          {
            "name": "responseMessage",
            "value": "string"
          }
        ]
      },
      "message": {
        "fields": [
          {
            "name": "messageName",
            "value": "string"
          },
          {
            "name": "messageBody",
            "value": [
              "dataTypes.complex.messageField"
            ]
          }
        ]
      },
      "messageField": {
        "fields": [
          {
            "name": "fieldName",
            "value": "string"
          },
          {
            "name": "fieldType",
            "value": "string"
          }
        ]
      }
    }
  }
}