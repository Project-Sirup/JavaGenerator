{
  "sirup_v": 1,
  "acceptedFormats": ["json"],
  "templates": [],
  "languages": [
    {
      "language": "Java",
      "description": "Generate a microservice written in Java 17",
      "options": [
        {
          "buildTool": {
            "selection": ["Maven","Gradle"]
          }
        },
        {
          "groupId": {
            "value": "dataTypes.simple.string"
          }
        }
      ]
    },
    {
      "language": "Kotlin",
      "description": "Generate a microservice written in Kotlin",
      "options": [
        {
          "buildTool": {
            "selection": ["Maven","Gradle"]
          }
        },
        {
          "groupId": {
            "value": "dataTypes.simple.string"
          }
        }
      ]
    }
  ],
  "apiTypes": [
    {
      "apiType": "REST",
      "description": "Generates a microservice with a REST API, using Apache Spark",
      "options": [
        {
          "port": {
            "value": "dataTypes.simple.int32"
          }
        },
        {
          "endpoints": {
            "value": ["dataTypes.complex.endpoint"]
          }
        },
        {
          "endpointGroups": {
            "value": ["dataTypes.complex.endpointGroup"]
          }
        }
      ]
    },
    {
      "apiType": "gRPC",
      "description": "Generates a microservice with a gRPC API",
      "options": [
        {
          "port": {
            "value": "dataTypes.simple.int32"
          }
        },
        {
          "procedures": {
            "value": ["dataTypes.complex.procedure"]
          }
        },
        {
          "messages": {
            "value": ["dataTypes.complex.message"]
          }
        }
      ]
    }
  ],
  "databases": [
    {
      "database": "PostgreSQL",
      "description": "Generates the microservice with a PostgreSQL connection and classes for accessing data in the database",
      "supportedTypes": [
        "string",
        "int32",
        "int64",
        "float",
        "boolean"
      ],
      "options": []
    },
    {
      "database": "MongoDB",
      "description": "Generates the microservice with a MongoDB connection and classes for accessing data in the database",
      "supportedTypes": [
        "any"
      ],
      "options": []
    }
  ],
  "dataTypes": {
    "simple": {
      "any": {},
      "string": {},
      "int32": {},
      "int64": {},
      "float": {},
      "boolean": {}
    },
    "complex": {
      "endpoint": {
        "fields": [
          {
            "name": "method",
            "selection": ["get","post","put","delete"]
          },
          {
            "name": "path",
            "value": "dataTypes.simple.string"
          },
          {
            "name": "linkedMethod",
            "value": "dataTypes.simple.string"
          }
        ]
      },
      "endpointGroup": {
        "fields": [
          {
            "name": "groupName",
            "type": "dataTypes.simple.string"
          },
          {
            "name": "innerGroups",
            "type": ["dataTypes.complex.endpointGroup"]
          },
          {
            "name": "endpoints",
            "type": ["dataTypes.complex.endpoint"]
          },
          {
            "name": "linkedData",
            "type": "dataTypes.simple.string"
          }
        ]
      },
      "procedure": {
        "fields": [
          {
            "name": "procedureName",
            "value": "dataTypes.simple.string"
          },
          {
            "name": "requestMessage",
            "value": "dataTypes.complex.string"
          },
          {
            "name": "responseMessage",
            "value": "dataTypes.complex.string"
          }
        ]
      },
      "message": {
        "fields": [
          {
            "name": "messageName",
            "value": "dataTypes.simple.string"
          },
          {
            "name": "messageBody",
            "value": ["dataTypes.complex.messageField"]
          }
        ]
      },
      "messageField": {
        "fields": [
          {
            "name": "fieldName",
            "value": "dataTypes.simple.string"
          },
          {
            "name": "fieldType",
            "value": "dataTypes.simple.string"
          }
        ]
      }
    }
  }
}